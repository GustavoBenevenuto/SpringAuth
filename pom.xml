<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Arquivo POM (Project Object Model) do Maven.
Define metadados do projeto, dependências, plugins e configurações de build.
Este arquivo é essencial para que o Maven saiba como compilar, empacotar e rodar a aplicação.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Versão do modelo POM -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Projeto herda configurações do Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath /> <!-- Busca no repositório remoto caso não encontre local -->
	</parent>

	<!-- Identificação do projeto -->
	<groupId>com</groupId>
	<artifactId>springauth</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>auth</name>
	<description>Projeto Autenticação</description>
	<url />

	<!-- Licença, desenvolvedores e controle de versão (placeholders por enquanto) -->
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>

	<!-- Definição da versão do Java usada no projeto -->
	<properties>
		<java.version>17</java.version>
	</properties>

	<!-- Dependências necessárias para rodar e compilar o projeto -->
	<dependencies>

		<!-- ======================= SPRING BOOT - Módulos Principais ======================= -->
		<!-- Starter para aplicações Web (Tomcat embutido, Spring MVC, Jackson JSON) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Starter para integração com JPA/Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Starter para segurança (autenticação e autorização) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Validações de dados com Bean Validation (javax.validation / jakarta.validation) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Ferramenta para facilitar desenvolvimento (reload automático, hot swap) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- ======================= BANCO DE DADOS ======================= -->
		<!-- Driver JDBC para PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.6.0</version>
		</dependency>

		<!-- Banco de dados em memória para testes e desenvolvimento -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Ferramenta de migração de banco de dados (controle de versão do schema) -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
		</dependency>

		<!-- ======================= AUTENTICAÇÃO / JWT ======================= -->
		<!-- Biblioteca para criação e validação de tokens JWT -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.5.0</version>
		</dependency>

		<!-- ======================= UTILITÁRIOS ======================= -->
		<!-- Lombok: reduz boilerplate (getters, setters, construtores automáticos) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- ======================= TESTES ======================= -->
		<!-- Starter de testes do Spring Boot (JUnit, AssertJ, Mockito) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Testes específicos para segurança -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Configurações de build -->
	<build>
		<plugins>
			<!-- Plugin do Spring Boot para empacotar e rodar a aplicação -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Exclui Lombok do pacote final (não necessário em runtime) -->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Plugin para configuração de encoding e tratamento de resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<nonFilteredFileExtensions>
						<!-- Arquivos .properties não devem ser alterados durante o build -->
						<nonFilteredFileExtension>properties</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
