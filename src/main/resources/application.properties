# Define o nome da aplicação Spring Boot. Pode ser usado em logs, monitoramento ou configuração de microserviços.
spring.application.name=auth

# URL de conexão com o banco PostgreSQL.
# host: localhost → seu container Docker está mapeado para a porta local 5432
# porta: 5432 → mapeada no docker-compose
# database: auth_db → definido no POSTGRES_DB no yml
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_db

# Usuário do banco definido em POSTGRES_USER no docker-compose.yml
spring.datasource.username=postgres

# Senha do banco definida em POSTGRES_PASSWORD no docker-compose.yml
spring.datasource.password=postgres

# Driver JDBC do PostgreSQL necessário para a conexão
spring.datasource.driver-class-name=org.postgresql.Driver

# Evitar criação automática de tabelas
# Define que o Hibernate não deve criar/alterar tabelas automaticamente.
# Evita que o schema do banco seja modificado sem controle.
spring.jpa.hibernate.ddl-auto=none

# Opcional: mostrar SQL no console
# Habilita o log das queries SQL no console, útil para depuração.
spring.jpa.show-sql=true

# Chave secreta para gerar e validar tokens JWT.
# Pode ser lida de uma variável de ambiente JWT_SECRET
# Se não existir, usa o valor padrão "o-sol-esta-lindo"
api.security.token.secret=@{JWT_SECRET:o-sol-esta-lindo}
